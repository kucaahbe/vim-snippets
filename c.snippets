snippet in "#include <header.h>" b
#include <${1:stdio}.h>
endsnippet

snippet inc "#include my_header.h" b
#include "${1:header}.h"
endsnippet

snippet def "#define MACRO" b
#define ${1:MACRO}
endsnippet

snippet ifdef "#ifdef MACRO" b
#ifdef ${1:MACRO}
$0
#endif /* $1 */
endsnippet

snippet ifndef "#ifndef MACRO" b
#ifndef ${1:MACRO}
#define $1
$0
#endif /* $1 */
endsnippet

snippet main "main() function" b
int main(int argc, char *argv[]) {
	$0
	return 0;
}
endsnippet

snippet { "{ ... }"
{
	$0
}
endsnippet

snippet ret "return smth;"
return ${1:0};
endsnippet

snippet for "for(i=0; ...) loop"
for (${1:i} = ${2:0}; $1 ${3:<} ${4:100500}; ${5:++$1}) {
	${6://code}
}
endsnippet

snippet while "while() loop"
while (${1:condition}) {
	${2://code}
}
endsnippet

snippet if "if () { ... }"
if (${1:condition}) {
	$0
}
endsnippet

snippet ife "if () { ... } else { ... }"
if (${1:cond}) {
	$0
} else {
	// else code
}
endsnippet

snippet elif "else if { ..."
else if (${1:COND}) {
	$0
}
endsnippet

snippet else "else"
else {
	$0
}
endsnippet

snippet switch "switch()"
switch (${1:c}) {
	case ${2:val}:
		$0
		break;
	default:
		break;
}
endsnippet

snippet case "case :"
case ${1:val}:
	$0
	break;
endsnippet

# types
snippet struct "new struct definition" b
struct ${1:StructName} {
	$0
};
endsnippet

snippet types "typedef struct"
typedef struct $2 {
  $0
} $1;
endsnippet

# functions
snippet f "function call"
${1:function}($0);
endsnippet

snippet fu "function definition" b
${3:void} ${1:function}(${2:void}) {
	$0
}
endsnippet

snippet prf "printf()"
printf("${1:str}\n");
endsnippet

snippet dprf "printf() some debug stuff"
#ifndef NDEBUG
#include <stdio.h>
fprintf(stderr, "%s:%u:%s() $1\n", __FILE__, __LINE__, __func__,
  $2
);
#endif /* NDEBUG */
endsnippet

snippet puts "puts()"
puts("$0");
endsnippet

snippet size "sizeof()" i
sizeof($0)
endsnippet

snippet a "assert();"
assert($0);
endsnippet

snippet func "__func__"
__func__
endsnippet

snippet line "__LINE__"
__LINE__
endsnippet

snippet file "__FILE__"
__FILE__
endsnippet
