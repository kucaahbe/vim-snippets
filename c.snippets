# CPP
snippet in "#include <header.h>"
#include <${1:stdio}.h>
endsnippet

snippet inc "#include my_header.h"
#include "${1:header}.h"
endsnippet

# defines:
snippet def "#define MACRO"
#define ${1:MACRO}
endsnippet

snippet und "#undef MACRO"
#undef ${1:MACRO}
endsnippet

# conditional:
snippet ifd "#ifdef MACRO"
#ifdef ${1:MACRO}
$0
#endif /* $1 */
endsnippet

snippet ifnd "#ifndef MACRO"
#ifndef ${1:MACRO}
$0
#endif /* $1 */
endsnippet

# C
snippet main "main() function"
int main(int argc, char *argv[])
{
	$0
	return 0;
}
endsnippet

snippet { "{ brakets }"
{
	$0
}
endsnippet

snippet ret "return smth;"
return ${1:0};
endsnippet

snippet for "for(i=0; ...) loop"
for ( ${1:i} = ${2:0}; $1 ${3:<} ${4:100500}; ${5:++$1} )
{
	${6://code}
}
endsnippet

snippet while "while() loop"
while ( ${1:condition} )
{
	${2://code}
}
endsnippet

snippet if "if () { ... }"
if ( ${1:COND} )
{
	$0
}
endsnippet

snippet ife "if () { ... } else { ... }"
if ( ${1:cond} )
{
	$0
}
else
{
	// else code
}
endsnippet

snippet elif "else if { ..."
else if ( ${1:COND} )
{
	$0
}
endsnippet

snippet else "else"
else
{
	$0
}
endsnippet

# types
snippet s "new struct definition"
struct ${1:StructName} {
	$0
};
endsnippet

# functions
snippet f "function call"
${1:function}(${2:args});
endsnippet

snippet fi "inline function call"
${1:function}(${2:args})$0
endsnippet

snippet fdef "function definition"
$3 $1($2);
${3:void} ${1:function}(${2:args})
{
	$0
}
endsnippet

snippet prf "printf()"
printf("${1:str}"${2:,});
endsnippet

snippet puts "puts()"
puts("$0");
endsnippet

snippet size "sizeof()"
sizeof($0)
endsnippet

snippet a "assert();"
assert($0);
endsnippet
