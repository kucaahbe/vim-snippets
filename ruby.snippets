snippet #! "#!"
#!/usr/bin/env ruby
$0
endsnippet

# language constructions
snippet re "require 'library'"
require '${1:lib}'
$0
endsnippet

snippet in "include SomeModule"
include ${1:SomeModule}
$0
endsnippet

snippet cl "cl"
class ${1:`!v substitute(Filename(), '\(_\|^\)\(.\)', '\u\2', 'g')`}
	${2}
end
endsnippet

snippet mod "mod"
module ${1:`!v substitute(Filename(), '\(_\|^\)\(.\)', '\u\2', 'g')`}
	${2}
end
endsnippet

snippet def "def"
def ${1}
end
endsnippet

snippet defi "defi"
def initialize ${1:*args}
	${2:# code}
end
endsnippet

snippet defs "defs"
def self.${1:method} ${2:*args}
	${3:# code}
end
endsnippet

snippet do "do"
do
	${1}
end
endsnippet

snippet dov "dov"
do |${1:var}|
	${2}
end
endsnippet

snippet dl "dl"
{ ${1} }
endsnippet

snippet dlv "dlv"
{ |${1:var}| ${2} }
endsnippet

snippet if "if"
if ${1}
end
endsnippet

snippet ife "ife"
if ${1}
else
end
endsnippet

snippet case "case"
case ${1:var}
when ${2:value}
end
endsnippet

# special variables:
snippet file "file"
__FILE__${1}
endsnippet

snippet line "line"
__LINE__${1}
endsnippet

snippet s "s"
self${1}
endsnippet

snippet n "n"
nil${1}
endsnippet

snippet t "t"
true
endsnippet

snippet f "f"
false
endsnippet

# often-used constructions:
snippet logi "logi"
logger.info ${1}
endsnippet

snippet logw "logw"
logger.warn ${1}
endsnippet

snippet logd "logd"
logger.warn ${1}
endsnippet

# misc:
snippet i "i"
inspect
endsnippet

snippet # "#"
#{${1}}
endsnippet

snippet rpath "rpath"
File.expand_path( File.join(${1}), __FILE__ )
endsnippet

snippet times "times"
${1:10_000}.times ${2}
endsnippet

# benchmarks:
snippet report "report"
x.report do
	${1}
end
endsnippet

snippet bm "bm"
Benchmark.bm do |x|
	x.report("1") do
	end
	x.report("2") do
	end
end
endsnippet

snippet bmbm "bmbm"
Benchmark.bmbm do |x|
	x.report("1") do
	end
	x.report("2") do
	end
end
endsnippet

# capybara-related
snippet sop "sop"
save_and_open_page
endsnippet
