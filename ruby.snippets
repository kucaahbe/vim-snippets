snippet #!
	#!/usr/bin/env ruby
	${1}
snippet ins
	inspect
snippet def
	def ${1}
	end
snippet defi
	def initialize ${1:*args}
		${2:# code}
	end
snippet defs
	def self.${1:method} ${2:*args}
		${3:# code}
	end
snippet if
	if ${1}
	end
snippet ife
	if ${1}
	else
	end
snippet case
	case ${1:var}
	when ${2:value}
	end
snippet file
	__FILE__${1}
snippet #
	#{${1}}
snippet :
	:${1:key} => ${2:val}
snippet eachl
	each { ${1:||} ${2} }
snippet each
	each do |${1:key}|
		${2}
	end
snippet do
	do
		${1}
	end
snippet dov
	do |${1:var}|
		${2}
	end
# RSpec snippets
snippet context
	context "${1}" do
	end
snippet desc
	describe "${1}" do
	end
snippet spec
	require 'spec/spec_helper'

	describe ${1:ClassName} do

		${2:pending('write some tests or delete '+__FILE__)}

	end
snippet it
	it "${1:description}"${2} do
	end
snippet itl
	it { ${1} }
snippet subj
	subject { ${1} }
snippet let
	let(${1:variable}) { ${2:value} }
snippet bl
	{ ${1} }
snippet blv
	{ |${1:var}| ${2} }
snippet rpath
	File.expand_path( File.join(${1}), __FILE__ )
