snippet #! "#!/usr/bin/env ruby" b
#!/usr/bin/env ruby
endsnippet

# language constructions
snippet re "require 'library'"
require '${1:lib}'
endsnippet

snippet in "include SomeModule"
include ${1:SomeModule}
endsnippet

snippet cl "cl"
class ${1:`!v substitute(Filename(), '\(_\|^\)\(.\)', '\u\2', 'g')`}
	$0
end
endsnippet

snippet mod "mod"
module ${1:`!v substitute(Filename(), '\(_\|^\)\(.\)', '\u\2', 'g')`}
	$0
end
endsnippet

snippet def "def"
def $0
end
endsnippet

snippet defi "defi"
def initialize$0
end
endsnippet

snippet defs "defs"
def self.$0
end
endsnippet

snippet do "do"
do
	$0
end
endsnippet

snippet dov "dov"
do |${1:var}|
	$0
end
endsnippet

snippet {{ "{ |var| ... }" i
{ |${1:var}| $0 }
endsnippet

snippet if "if"
if $0
end
endsnippet

snippet ife "ife"
if $0
else
end
endsnippet

snippet case "case"
case ${1:var}
when ${2:value}
else
	#code
end
endsnippet

snippet wh "when value"
when $0
endsnippet

# special variables:
snippet file "__FILE__" i
__FILE__
endsnippet

snippet line "__LINE__" i
__LINE__
endsnippet

snippet s "s"
self
endsnippet

snippet n "n"
nil
endsnippet

snippet t "t"
true
endsnippet

snippet f "f"
false
endsnippet

# often-used constructions:
snippet tap "tap { |var| ... }" i
tap { |${1:obj}| $0 }
endsnippet

snippet logi "logger.info ..."
logger.info $0
endsnippet

snippet logw "logger.warn ..."
logger.warn $0
endsnippet

snippet logd "logger.debug ..."
logger.debug $0
endsnippet

# misc:
snippet i "inspect" i
inspect
endsnippet

snippet # "#" i
#{$0}
endsnippet

snippet rpath "File.expand_path( File.join(...), __FILE__ )" i
File.expand_path( File.join($0), __FILE__ )
endsnippet

snippet times "n.times ..."
${1:10_000}.times $0
endsnippet

# benchmarks:
snippet report "report"
x.report do
	${1}
end
endsnippet

snippet bm "bm"
Benchmark.bm do |x|
	x.report("1") do
	end
	x.report("2") do
	end
end
endsnippet

snippet bmbm "bmbm"
Benchmark.bmbm do |x|
	x.report("1") do
	end
	x.report("2") do
	end
end
endsnippet

# capybara-related
snippet sop "sop"
save_and_open_page
endsnippet
